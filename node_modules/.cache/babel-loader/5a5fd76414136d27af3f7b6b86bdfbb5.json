{"ast":null,"code":"import _classCallCheck from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\n\nimport './App.css';\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      weather: []\n    };\n    _this.fetchCityWeather = _this.fetchCityWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"fetchCityWeather\",\n    value: function fetchCityWeather() {\n      var _this2 = this;\n\n      var city = ReactDOM.findDOMNode(\"city\");\n      fetch(\"api.openweathermap.org/data/2.5/weather?q=\".concat(city)).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          weather: result.weather\n        });\n      }, // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"_renderWeather\",\n    value: function _renderWeather() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          weather = _this$state.weather;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (weather.length > 0) {\n        return React.createElement(Card, {\n          style: {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, weather.name), React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"http://openweathermap.org/img/wn/09d.png@3x.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, weather.main), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, weather.description)));\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\",\n        integrity: \"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGroupEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        ref: \"city\",\n        type: \"text\",\n        placeholder: \"London\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.fetchCityWeather(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Weather me!\")))), this._renderWeather());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js"],"names":["React","Component","ReactDOM","Card","Form","Button","Row","Col","App","props","state","error","isLoaded","weather","fetchCityWeather","bind","city","findDOMNode","fetch","then","res","json","result","setState","message","length","name","main","description","_renderWeather"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\nimport './App.css';\nimport {Card, Form, Button, Row, Col} from 'react-bootstrap';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            weather: []\n        };\n\n    this.fetchCityWeather = this.fetchCityWeather.bind(this);\n    }\n    componentDidMount() {\n    }\n\n    fetchCityWeather(){\n        const city = ReactDOM.findDOMNode(\"city\");\n        fetch(`api.openweathermap.org/data/2.5/weather?q=${city}`)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    weather: result.weather\n                });\n            },\n            // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            })\n    }\n    \n    _renderWeather(){\n        const { error, isLoaded, weather } = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if (weather.length > 0) {\n            return (\n                <Card style={{}}>\n                    <Card.Header>{weather.name}</Card.Header>\n                    <Card.Img variant=\"top\" src=\"http://openweathermap.org/img/wn/09d.png@3x.png\" />\n                    <Card.Body>\n                        <Card.Title>{weather.main}</Card.Title>\n                        <Card.Text>{weather.description}</Card.Text>\n                    </Card.Body>\n                </Card>\n            );\n        } else {\n            return \"\";\n        }\n    }\n\n    render() {\n     return(\n        <div className=\"App\">  \n            <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n            integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\" crossorigin=\"anonymous\" />\n            <Form>\n                <Row>\n                    <Col sm={8}>\n                        <Form.Group controlId=\"formGroupEmail\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control ref=\"city\" type=\"text\" placeholder=\"London\" />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={4}>\n                        <Button variant=\"primary\" type=\"button\" onClick={this.fetchCityWeather()}>\n                            Weather me!\n                        </Button>                  \n                    </Col>\n                </Row>\n            </Form>\n            {this._renderWeather()}\n        </div>\n\n     )\n    }\n }\n\n\n export default App;"]},"metadata":{},"sourceType":"module"}