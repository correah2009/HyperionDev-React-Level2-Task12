{"ast":null,"code":"import _classCallCheck from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js\";\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\n\nimport './App.css';\nimport { Card, FormControl, InputGroup, Button } from 'react-bootstrap';\nconsole.log('process.env.REACT_APP_WEATHER_API_KEY', process.env.REACT_APP_WEATHER_API_KEY);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.fetchCityWeather = function () {\n      var city = _this.city.current.value;\n      fetch(\"api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&APPID=\").concat(process.env.REACT_APP_WEATHER_API_KEY)).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(\"result\", result);\n\n        _this.setState({\n          isLoaded: true,\n          weather: result.weather\n        });\n      }, // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      weather: []\n    };\n    _this.city = React.createRef();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"_renderWeather\",\n    value: function _renderWeather() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          weather = _this$state.weather;\n\n      if (weather.length === 0) {\n        return \"\";\n      } else if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (weather.length > 0) {\n        return React.createElement(Card, {\n          style: {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, weather.name), React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"http://openweathermap.org/img/wn/09d.png@3x.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, weather.main), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, weather.description)));\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          maxWidth: \"500px\",\n          margin: \"0 auto\",\n          padding: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\",\n        integrity: \"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\",\n        crossOrigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"City\",\n        \"aria-label\": \"City\",\n        \"aria-describedby\": \"city-addon\",\n        ref: this.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.fetchCityWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Weather me!\"))), this._renderWeather());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js"],"names":["React","Component","Card","FormControl","InputGroup","Button","console","log","process","env","REACT_APP_WEATHER_API_KEY","App","props","fetchCityWeather","city","current","value","fetch","then","res","json","result","setState","isLoaded","weather","error","state","createRef","length","message","name","main","description","maxWidth","margin","padding","_renderWeather"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\nimport './App.css';\nimport {Card, FormControl, InputGroup, Button} from 'react-bootstrap';\n\nconsole.log('process.env.REACT_APP_WEATHER_API_KEY', process.env.REACT_APP_WEATHER_API_KEY);\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            weather: []\n        };\n\n    this.city = React.createRef();\n    }\n    componentDidMount() {\n    }\n\n    fetchCityWeather = () => {\n        const city = this.city.current.value;\n        fetch(`api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${process.env.REACT_APP_WEATHER_API_KEY}`)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                console.log(\"result\", result);\n                this.setState({\n                    isLoaded: true,\n                    weather: result.weather\n                });\n            },\n            // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            })\n    }\n    \n    _renderWeather(){\n        const { error, isLoaded, weather } = this.state;\n        if(weather.length === 0){\n            return \"\"\n        } else if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else if (weather.length > 0) {\n            return (\n                <Card style={{}}>\n                    <Card.Header>{weather.name}</Card.Header>\n                    <Card.Img variant=\"top\" src=\"http://openweathermap.org/img/wn/09d.png@3x.png\" />\n                    <Card.Body>\n                        <Card.Title>{weather.main}</Card.Title>\n                        <Card.Text>{weather.description}</Card.Text>\n                    </Card.Body>\n                </Card>\n            );\n        } else {\n            return \"\";\n        }\n    }\n\n    render() {\n     return(\n        <div style={{ maxWidth: \"500px\", margin: \"0 auto\", padding:\"50px\"}}>  \n            <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n            integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\" crossOrigin=\"anonymous\" />\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"City\"\n                aria-label=\"City\"\n                aria-describedby=\"city-addon\"\n                ref={this.city}\n                />\n                <InputGroup.Append>\n                <Button variant=\"primary\" type=\"button\" onClick={this.fetchCityWeather}>Weather me!</Button>\n                </InputGroup.Append>\n            </InputGroup>\n            {this._renderWeather()}\n        </div>\n\n     )\n    }\n }\n\n\n export default App;"]},"metadata":{},"sourceType":"module"}