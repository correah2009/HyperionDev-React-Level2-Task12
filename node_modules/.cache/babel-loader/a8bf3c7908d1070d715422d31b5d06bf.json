{"ast":null,"code":"import _classCallCheck from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js\";\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\n\nimport './App.css';\nimport { Card, FormControl, InputGroup } from 'react-bootstrap';\nconsole.log('process.env.REACT_APP_WEATHER_API_KEY', process.env.REACT_APP_WEATHER_API_KEY);\nexport var Weather = function Weather(props) {\n  return React.createElement(Card, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    style: {\n      textTransform: \"capitalize\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.data.name), React.createElement(Card.Img, {\n    xs: 4,\n    variant: \"top\",\n    src: \"https://openweathermap.org/img/wn/\".concat(props.data.weather[0].icon, \"@2x.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Card.ImgOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      fontSize: '50px',\n      textAlign: 'center',\n      marginTop: '360px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.data.main.temp, \"\\xB0F\")), React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.data.weather[0].main), React.createElement(Card.Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.data.weather[0].description)));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      error: null,\n      isLoading: false,\n      data: {},\n      city: ''\n    };\n    _this.handleKeyPress = _this.handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchCityWeather = _this.fetchCityWeather.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(target) {\n      this.setState({\n        city: target.value\n      });\n\n      if (target.charCode === 13) {\n        return this.fetchCityWeather();\n      }\n    }\n  }, {\n    key: \"fetchCityWeather\",\n    value: function fetchCityWeather() {\n      var _this2 = this;\n\n      var city = this.city.hasOwnProperty('current') ? this.city.current.value : \"\";\n      console.log(\"city\", city);\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city.split(\" \").join(\"+\"), \"&units=imperial&APPID=\").concat(process.env.REACT_APP_WEATHER_API_KEY)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(\"data\", data);\n\n        _this2.setState({\n          isLoading: false,\n          data: data\n        });\n      }, // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        console.log(\"error\", error);\n\n        _this2.setState({\n          isLoading: false,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"_renderWeather\",\n    value: function _renderWeather() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoading = _this$state.isLoading,\n          data = _this$state.data;\n      console.log(\" error\", error, \"isLoaded\", isLoading, 'dara', data);\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (data.hasOwnProperty('message')) {\n        console.log(\"I'm here 2\");\n        return React.createElement(\"div\", {\n          style: {\n            textTransform: \"capitalize\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, data.message);\n      } else if (isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (data.hasOwnProperty('weather')) {\n        console.log(\"I'm here 3\");\n        return React.createElement(Weather, {\n          data: data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          maxWidth: \"500px\",\n          margin: \"0 auto\",\n          padding: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\",\n        integrity: \"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\",\n        crossOrigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"City\",\n        \"aria-label\": \"City\",\n        \"aria-describedby\": \"city-addon\",\n        value: this.state.city,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"primary\",\n        type: \"button\",\n        onClick: this.fetchCityWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Weather me!\"))), this._renderWeather());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/silverwhale/Desktop/HyperionDev React Projects/Task 12/example/src/App.js"],"names":["React","Component","Card","FormControl","InputGroup","console","log","process","env","REACT_APP_WEATHER_API_KEY","Weather","props","textTransform","data","name","weather","icon","fontSize","textAlign","marginTop","main","temp","description","App","state","error","isLoading","city","handleKeyPress","bind","fetchCityWeather","target","setState","value","charCode","hasOwnProperty","current","fetch","split","join","then","res","json","message","maxWidth","margin","padding","_renderWeather"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'isomorphic-fetch'; //We need this statement to use the Fetch API. You will also need to install isomorphic-fetch ('npm install --save isomorphic-fetch es6-promise') for\n//this code to work when you write your own code with the Fetch API. This was already done when you 'npm install'ed this project\nimport './App.css';\nimport {Card, FormControl, InputGroup} from 'react-bootstrap';\n\nconsole.log('process.env.REACT_APP_WEATHER_API_KEY', process.env.REACT_APP_WEATHER_API_KEY);\n\nexport const Weather = (props) => {\n    return (\n        <Card style={{}}>\n            <Card.Header style={{textTransform: \"capitalize\"}}>{props.data.name}</Card.Header>\n            <Card.Img xs={4} variant=\"top\" src={`https://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`} />\n            <Card.ImgOverlay>\n                <Card.Title style={{fontSize: '50px', textAlign: 'center', marginTop: '360px'}}>{props.data.main.temp}&#176;F</Card.Title>\n            </Card.ImgOverlay>\n            <Card.Body>\n                <Card.Title style={{textAlign: \"center\"}}>{props.data.weather[0].main}</Card.Title>\n                <Card.Text style={{textAlign: \"center\"}}>{props.data.weather[0].description}</Card.Text>\n            </Card.Body>\n        </Card>\n    );\n} \n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoading: false,\n            data: {},\n            city: ''\n        };\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.fetchCityWeather = this.fetchCityWeather.bind(this);\n    }\n    componentDidMount() {\n    }\n\n    handleKeyPress(target){\n        this.setState({city: target.value});\n        if(target.charCode===13){\n            return this.fetchCityWeather()  \n          } \n    }\n\n    fetchCityWeather(){\n        const city = (this.city.hasOwnProperty('current'))? this.city.current.value : \"\";\n        console.log(\"city\", city);\n        this.setState({isLoading: true});\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city.split(\" \").join(\"+\")}&units=imperial&APPID=${process.env.REACT_APP_WEATHER_API_KEY}`)\n        .then(res => res.json())\n        .then(\n            (data) => {\n                console.log(\"data\", data);\n                this.setState({\n                    isLoading: false,\n                    data\n                });\n            },\n            // Note: it's important to handle errors here  instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                console.log(\"error\", error);\n                this.setState({\n                    isLoading: false,\n                    error\n                });\n            })\n    }\n    \n    _renderWeather(){\n        let { error, isLoading, data } = this.state;\n        console.log(\" error\", error, \"isLoaded\", isLoading, 'dara', data);\n        \n        if (error) {\n            return <div>Error: {error.message}</div>;\n        }else if (data.hasOwnProperty('message')){\n            console.log(\"I'm here 2\");\n            return <div style={{textTransform: \"capitalize\"}}>{data.message}</div>;\n        }else if (isLoading) {\n            return <div>Loading...</div>;\n        }else if (data.hasOwnProperty('weather')) {\n            console.log(\"I'm here 3\");\n            return <Weather data={data}/>\n        }else{\n            return \"\"\n        }\n    }\n\n    render() {\n     return(\n        <div style={{ maxWidth: \"500px\", margin: \"0 auto\", padding:\"50px\"}}>  \n            <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n            integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\" crossOrigin=\"anonymous\" />\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"City\"\n                aria-label=\"City\"\n                aria-describedby=\"city-addon\"\n                value={this.state.city}\n                onKeyPress={this.handleKeyPress}\n                />\n                <InputGroup.Append>\n                    <button className=\"primary\" type=\"button\" onClick={this.fetchCityWeather}>Weather me!</button>\n                </InputGroup.Append>\n            </InputGroup>\n            {this._renderWeather()}\n        </div>\n\n     )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}